generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int       @id @default(autoincrement())
  nome         String
  email        String    @unique
  telefone     String
  senha        String
  genero       String
  avatar       String?
  posts        Post[]
  sentMessages Message[] @relation("SentMessages")
  chats        Chat[]    @relation("ChatParticipants")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Post {
  id          Int      @id @default(autoincrement())
  titulo      String
  preco       Int
  descricao   String
  img         Json
  endereco    String
  cidade      String
  estado      String
  latitude    Float?
  longitude   Float?
  cep         String
  tipo        String   @default("aluguel")
  propriedade String   @default("apartamento")
  createdAt   DateTime @default(now())
  usuarioId   Int
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
}

model Chat {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  participants  Usuario[] @relation("ChatParticipants")
  messages      Message[]
  lastMessage   String?
  lastMessageAt DateTime? @default(now())
  isActive      Boolean   @default(true)
}

model Message {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  readAt    DateTime?
  chatId    Int
  chat      Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
  senderId  Int
  sender    Usuario   @relation("SentMessages", fields: [senderId], references: [id])
  isDeleted Boolean   @default(false)
}
